---
- hosts: 192.168.12.81, 192.168.12.83, 192.168.12.86, 192.168.12.87, 192.168.12.88, 192.168.12.89, 192.168.12.90, 192.168.12.91, 192.168.12.92, 192.168.12.94, 192.168.12.95, 192.168.12.96, 192.168.12.97, 192.168.12.98, 192.168.12.100, 192.168.12.101 # 192.168.12.82, 192.168.12.84, 192.168.12.85, 192.168.12.93, 192.168.12.99
  remote_user: videk

# Select which application to test, duration in minutes and which device should be the root of the network
  vars:
    application: 07_multicast
    duration: 3
    root_node: 192.168.12.83

# Display experiment abstract in build.log 
  tasks:
  - name: Display abstract
    debug:
      msg: "Testing {{application}}, duration {{duration}} minutes, root node is {{root_node}}"
    when: inventory_hostname == root_node

  - name: Create directory
    file:
      path: ~/deploy/logatec-experiment
      state: directory

# recursive will also download the submodules
# on the version param you can change which branch to pull  TODO
  - name: Pull all changes from github
    git:
      repo: git@github.com:logatec3/logatec-experiment.git
      dest: ~/deploy/logatec-experiment
      recursive: yes
      update: yes
      force: yes
      depth: 1
      version: master

# -f flag so we can later copy whole LOG-a-TEC directory into container
# with Dockerfile command COPY...else we get error "Forbidden path outside the build context"
  - name: Build docker file
    command: docker build -t vesna-drivers -f deployment/docker/Dockerfile .
    args:
      chdir: ~/deploy/logatec-experiment

  - name: Cleanup old docker containers (target)
    register: target
    ignore_errors: yes
    command: "{{ item }}"
    with_items:
      - docker kill target
      - docker rm target

    # Root node
  - name: Run docker image for root
    command: docker run -d --name target --privileged --net=host -it -e TARGET=run_experiment_root -e APP_DIR="{{application}}" -e APP_DURATION_MIN="{{duration}}" vesna-drivers
    when: inventory_hostname == root_node

    # Other nodes
  - name: Run docker image
    command: docker run -d --name target --privileged --net=host -it -e TARGET=run_experiment_node -e APP_DIR="{{application}}" -e APP_DURATION_MIN="{{duration}}" vesna-drivers
    when: inventory_hostname != root_node
